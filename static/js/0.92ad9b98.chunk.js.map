{"version":3,"sources":["common/SvgIcon/index.js","common/Button/styles.js","common/Button/index.js","components/ContentBlock/RightContentBlock/styles.js","components/ContentBlock/RightContentBlock/index.js","components/ContentBlock/LeftContentBlock/styles.js","components/ContentBlock/LeftContentBlock/index.js","pages/Home/index.js"],"names":["SvgIcon","src","width","height","alt","with","Button","styled","button","props","color","children","onClick","disabled","RightBlockContainer","section","Content","p","ContentWrapper","div","ButtonWrapper","withTranslation","title","content","icon","t","id","type","justify","align","lg","md","sm","xs","left","map","item","document","getElementById","scrollIntoView","behavior","scrollTo","right","preview","LeftContentBlock","ServiceWrapper","MinTitle","h6","MinPara","Col","subTitle","subContent","span","MiddleBlock","lazy","FAQBlock","Container","Home","first","IntroContent","text","AboutContent","subText","MiddleBlockContent"],"mappings":"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","file":"static/js/0.92ad9b98.chunk.js","sourcesContent":["const SvgIcon = ({ src, width, height }) => (\r\n  <img src={`/img/svg/${src}`} alt={src} with={width} height={height} />\r\n);\r\n\r\nexport default SvgIcon;\r\n","import styled from 'styled-components';\r\n\r\nexport const Button = styled.button`\r\n  background: ${(props) => props.color || '#2e186a'};\r\n  color: ${(props) => (props.color ? '#2E186A' : '#fff')};\r\n  font-size: 1rem;\r\n  font-weight: 700;\r\n  width: 100%;\r\n  border: ${(props) => (props.color ? '1px solid #2E186A' : '0px')};\r\n  border-radius: 8px;\r\n  height: 60px;\r\n  outline: none;\r\n  cursor: pointer;\r\n  margin-top: 0.625rem;\r\n  max-width: 180px;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    width: ${(props) => (props.width ? '160px' : '100%')};\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    width: ${(props) => (props.width ? '140px' : '100%')};\r\n  }\r\n\r\n  @media only screen and (max-width: 480px) {\r\n    width: ${(props) => (props.width ? '130px' : '100%')};\r\n  }\r\n`;\r\n","import * as S from \"./styles\";\r\n\r\nconst Button = ({ color, width, children, onClick, disabled }) => (\r\n  <S.Button color={color} width={width} onClick={onClick} disabled={disabled}>\r\n    {children}\r\n  </S.Button>\r\n);\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\r\n\r\nexport const RightBlockContainer = styled.section`\r\n  position: relative;\r\n  padding: 10rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 8rem 0 6rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled.p`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const ContentWrapper = styled.div`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 480px) {\r\n    margin: 2rem 0;\r\n  }\r\n`;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 400px;\r\n`;\r\n","import { Row, Col, Image } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport Slide from \"react-reveal/Slide\";\r\n\r\nimport SvgIcon from \"../../../common/SvgIcon\";\r\nimport Button from \"../../../common/Button\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst RightBlock = ({ title, content, button, icon, t, id }) => {\r\n  const scrollTo = (id) => {\r\n    const element = document.getElementById(id);\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n  return (\r\n    <S.RightBlockContainer>\r\n      <Row type=\"flex\" justify=\"space-between\" align=\"middle\" id={id}>\r\n        <Col lg={11} md={11} sm={11} xs={24}>\r\n          <Slide left>\r\n            <S.ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              <S.Content>{t(content)}</S.Content>\r\n              <S.ButtonWrapper>\r\n                {button &&\r\n                  typeof button === \"object\" &&\r\n                  button.map((item, id) => {\r\n                    return (\r\n                      // TODO: Add the \"add your email option with connection to firebase\"\r\n                      <Button\r\n                        key={id}\r\n                        color={item.color}\r\n                        width=\"true\"\r\n                        onClick={() => scrollTo(\"about\")}\r\n                      >\r\n                        {t(item.title)}\r\n                      </Button>\r\n                    );\r\n                  })}\r\n              </S.ButtonWrapper>\r\n            </S.ContentWrapper>\r\n          </Slide>\r\n        </Col>\r\n        <Col lg={13} md={13} sm={13} xs={24}>\r\n          <Slide right>\r\n            <Image\r\n              src={`/img/svg/${icon}`}\r\n              preview={false}>\r\n            </Image>\r\n          </Slide>\r\n        </Col>\r\n      </Row>\r\n    </S.RightBlockContainer>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(RightBlock);\r\n","import styled from 'styled-components';\r\nimport { Col } from 'antd';\r\n\r\nexport const LeftContentBlock = styled.section`\r\n  position: relative;\r\n  padding: 10rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 4rem 0 4rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled.p`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const ContentWrapper = styled.div`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 480px) {\r\n    margin: 2rem 0;\r\n  }\r\n`;\r\n\r\nexport const ServiceWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const MinTitle = styled.h6`\r\n  font-size: 1rem;\r\n  line-height: 1rem;\r\n  padding: 0.5rem 0;\r\n`;\r\n\r\nexport const MinPara = styled.p`\r\n  font-size: 0.75rem;\r\n`;\r\n\r\nexport const ServiceItem = styled(Col)`\r\n  margin: 2rem 0;\r\n  position: relative;\r\n`;\r\n","import { Row, Col, Image } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport Slide from \"react-reveal/Slide\";\r\n\r\nimport SvgIcon from \"../../../common/SvgIcon\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst LeftContentBlock = ({ icon, title, content, subTitle, subContent, section, t, id }) => {\r\n  return (\r\n    <S.LeftContentBlock>\r\n      <Row type=\"flex\" justify=\"space-between\" align=\"middle\" id={id}>\r\n        <Col lg={13} md={13} sm={13} xs={24}>\r\n          <Slide left>\r\n            <Image\r\n              src={`/img/svg/${icon}`}\r\n              preview={false}>\r\n            </Image>\r\n          </Slide>\r\n        </Col>\r\n        <Col lg={11} md={11} sm={11} xs={24}>\r\n          <Slide right>\r\n            <S.ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              <S.Content>{t(content)}</S.Content>\r\n              <h6>{t(subTitle)}</h6>\r\n              <S.Content>{t(subContent)}</S.Content>\r\n              <S.ServiceWrapper>\r\n                <Row type=\"flex\" justify=\"space-between\">\r\n                  {section &&\r\n                    typeof section === \"object\" &&\r\n                    section.map((item, id) => {\r\n                      return (\r\n                        <Col key={id} span={11}>\r\n                          <SvgIcon src={item.icon} width=\"60px\" height=\"60px\" />\r\n                          <S.MinTitle>{t(item.title)}</S.MinTitle>\r\n                          <S.MinPara>{t(item.content)}</S.MinPara>\r\n                        </Col>\r\n                      );\r\n                    })}\r\n                </Row>\r\n              </S.ServiceWrapper>\r\n            </S.ContentWrapper>\r\n          </Slide>\r\n        </Col>\r\n      </Row>\r\n    </S.LeftContentBlock>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(LeftContentBlock);\r\n","import { lazy } from \"react\";\r\n\r\nimport IntroContent from \"../../content/IntroContent.json\";\r\nimport MiddleBlockContent from \"../../content/MiddleBlockContent.json\";\r\nimport AboutContent from \"../../content/AboutContent.json\";\r\nimport MissionContent from \"../../content/MissionContent.json\";\r\nimport ProductContent from \"../../content/ProductContent.json\";\r\nimport ContactContent from \"../../content/ContactContent.json\";\r\nimport RightContentBlock from \"../../components/ContentBlock/RightContentBlock\";\r\nimport LeftContentBlock from \"../../components/ContentBlock/LeftContentBlock\";\r\n\r\nconst ContactFrom = lazy(() => import(\"../../components/ContactForm\"));\r\nconst ContentBlock = lazy(() => import(\"../../components/ContentBlock\"));\r\nconst MiddleBlock = lazy(() => import(\"../../components/MiddleBlock\"));\r\nconst FAQBlock = lazy(() => import(\"../../components/FAQBlock\"));\r\nconst Container = lazy(() => import(\"../../common/Container\"));\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Container>\r\n      <RightContentBlock\r\n        type=\"right\"\r\n        first=\"true\"\r\n        title={IntroContent.title}\r\n        content={IntroContent.text}\r\n        button={IntroContent.button}\r\n        icon=\"LetsGetStartediPhone.png\"\r\n        id=\"intro\"\r\n      />\r\n      <LeftContentBlock\r\n        type=\"left\"\r\n        title={AboutContent.title}\r\n        content={AboutContent.text}\r\n        subTitle={AboutContent.subTitle}\r\n        subContent={AboutContent.subText}\r\n        section={AboutContent.section}\r\n        icon=\"SavingsAllocationiPhone.png\"\r\n        id=\"about\"\r\n      />\r\n\r\n      <MiddleBlock\r\n        title={MiddleBlockContent.title}\r\n        content={MiddleBlockContent.text}\r\n        button={MiddleBlockContent.button}\r\n        section={MiddleBlockContent.section}\r\n      />\r\n\r\n      <FAQBlock id=\"faq\"/>\r\n\r\n      \r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}